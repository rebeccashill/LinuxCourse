Follow My Lead.


**Access to Linux via Putty**
  ssh, ip addr = find Linux machine IP
  ifconfig
    - to use ifconfig, run "yum install net-tools"
  -l username ip address to connect to Linux machine


**Command Prompts and Getting Prompts Back**
  [root@MyFirstLinuxVM ~] #
    - username, hostname, Prompt symbol
  To get your prompt back: Ctrl + C
  whoami = find the username
  hostname = find the name of the machine
  top = provides a real-time view of running processes and system resource usage
  Ctrl C = to get unstuck, get your prompt back


**Introduction to Linux File System**
  cd / = go into root directory
  ls -l = shows a list of different directories


**File System Structure and its Description**
  /boot = Contains file that is used by the boot loader (grub.cfg)
    when an operating system is booting up, the system looks for /boot
  /root = root user home directory. It is not the same as /
  /dev = system devices(e.g. disk, cdrom, speakers, flassdrive, keyboard, etc.)
  /etc = configuration files
  /bin -> /usr/bin = everyday user commands
  /sbin -> /usr/sbin = system/filesystem commands
  /opt = optional add-on applications (not part of OS apps)
  /proc = running processes (only exist in memory)
  /lib -> usr/lib = C programming library files needed by commands and apps
    -strace -e open pwd
  /tmp = directory for temporary files
  /home = directory for users
  /var = system logs
  /run = system deamons that start very early (e.g., systemd & udev) to store temporary runtime files like PID files
  /mnt = to mount external file system (e.g. NFS)
  /media = for cdrom mounts


**File System Navigation Commands**
  Navigating File System
    when navigating a UNIX File System, there are a few important commands: "cd", "pwd", "ls"
  "cd" = change directory, primary cmd for moving you around the filesystem
  "pwd" stands for print working directory, tells you where your current location is
  "ls" stands for list, lists all the directories/files within a current working directory
  su- = add password, will tell you the last login


**Linux File or Directory Properties**
  Each file or directory in Linux has detailed information or properties


**Linux File Types**
  Directories
  Links
  Plain text files
  Block files
    Block device file
      Hard drives
      USB drives
  Text files
  Executable files
  Images
  Videos
  Types of links:
    Soft link
    Hard link
  File symbol          Meaning
  -                    Regular file
  d                    Directory
  l                    Link
  c                    Special file or device file
  s                    socket file = used for network communication between processes
  p                    Named pipe
  b                    Block device


**Changing Password**
  Command: passwd userid
    Change your initial password as soon as you login
  Old password: -enter your current password
  New password: -enter your new password
  Retype new password: -re-enter your new password


**Absolute and Relative Paths**
  There are 2 paths to navigate to a file system
    -absolute path
    -relative path
  An absolute path always begins with a "/". This indicates that the path starts at the root directory.
    Example of an absolute path: cd /var/log/samba
  A relative path does not begin with a "/". It identifies a location relative to your current position.
    An example of a relative path is
      cd /var
      cd log
      cd samba
  Go to samba folder: su- (log into root) -> cd /var/log/samba


**Creating Files and Directories**
  Ways to create files: touch, cp, vi
    touch = create a new fine (touch jerry)
    cp = copies one file to another file (touch jerry lex)
    vi = sends you to file editor mode (:wq! to exit)
  Way to create directory: mkdir
    -mkdir
  Cannot touch /etc: it's a read-only file system


**Copying Directories**
  Command to copy a directory: cp
    -cp -R <source_folder><destination_folder>


**Finding Files & Directories (find, locate)**
  Commands used to find files/directories
    find
    locate
      If locate doesn't output any result, then as root run "updatedb"
  mv <source file> <destination folder> = move a file
  find / (name of file) = find the file when you don't know the directory name
    - use su- to get into 'permission denied' directory
  man find = the manual for find


**Difference Between Find and Locate**
  locate: locate uses a prebuilt database, which should be regularly updated
          can be inaccurate if the database is not updated
  find: iterates over a filesystem to locate files
          locate is much faster than find, but find is more accurate
  to update locate database, run updatedb
    - use su - for updatedb to get rid of error
    - find . -name susan is the same as locate susan


**WildCards (*, ?, ^ [])**
  a wildcard is a character that can be used as a substitute for any of a class of characters in a search
  * = represents zero or more characters
  ? = represents a single character
  [] = represents a range of characters
  touch abcd(1..9)-xyz = create files abcd*-xyz (1 to 9)
    rm a*, rm *xy* = removes all files w/ those letters in it
      rm *xyz = another way to remove the files
  ls -l ?bcd* = shows the files as well
  ls -l [cd] = anything that has c & d in the file
  \ = (slash) "as an escape character"
  ^ = (caret) "the beginning of the line"
  $ = (dollar sign) "the end of the line"


**Soft and Hard Links**
  inode = Pointer or number of a file on the hard disk
  Soft Link = link will be removed if file is removed or renamed
  Hard Link = Deleting, renaming, or moving the original file will not affect the hard link
  ln = hard link
  ln -s = soft link

  Please note:
    You cannot create soft or hard link within the same directory with the same name. That is why we will create links in /tmp directory.
  ln -s /home/user/hulk -> create soft link /home/user/hulk
    looks like hulk -> /home/user/hulk
  echo "hulk is a superhero">hulk
    cat hulk to see it (returns "hulk is a superhero")
  ls -li to find inodes of the file
  ls -ltri hulk to find the inode for hulk
  echo "123" >> hulk            hulk is a superhero
  cat hulk                      123
  * If source file is deleted -> soft link is broken
    If source file is deleted -> hard link is alright
  Avoid using spaces in Linux
