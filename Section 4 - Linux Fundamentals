**Linux Command Syntax**
Command options and arguments
  - Commands typically have the syntax:
      command option(s) arguments(s)
Options:
  Modify the way that a command works
  Usually consists of a hyphen or dash followed by a single letter
  Some commands accept multiple options which can usually be grouped together after a single hyphen

ls -lt = order files based on last modified time
rm -f = remove file
ls -a, --all = do not ignore entries starting with .
ls -A, --almost-all = do not list implied . and ..
ls -l --author = print the author of each file
ls -b, --escape = print C-style escapes for nongraphic characters
ls --block-size=SIZE = scale sizes by SIZE before printing them

To see these options and more, use the command "man ls"

**Files and Directory Permissions (chmod)**
There are 3 types of permissions:
  - r = read
  - w = write
  - x = execute - running a program
Each permission (rwx) can be controlled at 3 levels
  - u - user = yourself
  - g - group = can be people in the same project
  - o - other = everyone on the system
File or directory permission can be displayed by running ls -l command
chmod = command to change permission
  - man chmod to find out more
chmod g-w filename = get rid of write permission
chmod a-r filename = gets rid of all read permissions
chmod u-w filename = remove write permissions from user
chmod u+rw filename = adds read & write permissions to user
chmod o+rw filename = adds read & write permissions to others

**File Permissions Using Numeric Mode**
Permission to a file and directory can also be assigned numerically
  - chmod ugo+r FILE    OR     - chmod 444 FILE
Owners assign permission on every file and directory
REMINDER: ls -ltr to see permissions
Assigning numbers to permission types
    0    No Permission       ---
    1    Execute             --x
    2    Write               -w-
    3    Execute+Write       -wx
    4    Read                r--
    5    Read+Execute        r-x
    6    Read+Write          rw-
    7    Read+Write+Execute  rwx
ex:chmod 764 FILE
    -rwxrw-r--
chmod 000 filename: remove permissions
chmod 604 -> -rw----r--
There are also online calculators for Linux permissions

**File Ownership Commands (chown, chgrp)**
Command to change file ownership
  -chown = changes the ownership of a file
  -chgrp = changes the group ownership of a file
Recursive ownership change option (Cascade)
  - -R

**Access Control List (ACL)**
What is ACL?
  - Access Control List (ACL)
  - Provides an additional, more flexible permission mechanism for file systems
  - Designed to assist with UNIX file permissions
  - Allows you to give permissions for any user or group to any disc resource
List of commands for setting up ACL
  -setfac1 -m u:user:rwx /path/to/file: to add permission for user
  -setfac1 -m g:group:rw: to add permissions for a group
  -setfac1 -dm "entry" /path/to/dir: to allow all files or directories to inherit ACL entries from the directory it is within
  -setfac1 -x u:user /path/to/file: to remove a specific entry
  -setfac1 -b path/to/file: to remove all entries (for all users)
Note:
  As you assign the ACL permission to a file/directory, it adds + sign at the end of the permission
  Setting w permission with ACL does not allow to remove a file
  Also, you should be using setfac1 and then getfac1 together
touch tx <------------------------> create file
ls -l tx <------------------------> -rw-r--r--
getfac1 tx <----------------------> #file: tx        user:: rw-
                                   #owner: root     group::r--
                                   #group: root     other::r--
setfac -m u:user:rwx /tmp/tx <----> sets permissions to the user
getfac1 /tmp/tx <-----------------> #file tmp/tx    user:: rw-
                                #owner: root    user:rebeccca:rw-
                                #group: root    group::r--
                                                mask::rw-
                                                other::r--
setfac -x u:rebeccca /tmp/tx <----> sets permissions to the user
getfac1 tmp/tx <------------------> #file tmp/tx    user:: rw-
                                    #owner: root    user:rebeccca:rw-
                                    #group: root    group::r--
                                                    mask::rw-
                                                    other::r--
rm tx <---------------------------> action not permitted after the last setfac

**Help Commands**
There are 3 types of help commands
  -whatis command
  -command --help
  -man command
whatis ls = ls(l), ls(lp) -> list directory contents
whatis pwd = pwd(l), pwd(lp) -> print name of current/working directory, return working directory name

**TAB Completion and Up Arrow Keys**
Hitting TAB key completes the available commands, files, or directories
  - chm TAB
  - ls j<TAB>
  - cd Des<TAB>
Hitting up arrow key on the keyboard returns the last command ran
ch -> tab twice -> all the commands that start with ch
ls l -> tab twice -> all the files that start with 'l'

**Adding Text to Files**

**Input and Output Redirects (>, >>, <, stdin, stdout, and stderr)**

**Standard Output to a File (tee command)**

**Pipes (|)**

